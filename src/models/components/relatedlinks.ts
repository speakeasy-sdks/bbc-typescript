/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { RelatedLink, RelatedLink$ } from "./relatedlink";
import * as z from "zod";

export type RelatedLinks = {
    relatedLink?: Array<RelatedLink> | undefined;
};

/** @internal */
export namespace RelatedLinks$ {
    export const inboundSchema: z.ZodType<RelatedLinks, z.ZodTypeDef, unknown> = z
        .object({
            related_link: z.array(RelatedLink$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.related_link === undefined ? null : { relatedLink: v.related_link }),
            };
        });

    export type Outbound = {
        related_link?: Array<RelatedLink$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RelatedLinks> = z
        .object({
            relatedLink: z.array(RelatedLink$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.relatedLink === undefined ? null : { related_link: v.relatedLink }),
            };
        });
}
