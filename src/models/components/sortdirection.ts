/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type SortDirection = {
    href: string;
    isDefault: string;
    name: string;
    value: string;
};

/** @internal */
export namespace SortDirection$ {
    export const inboundSchema: z.ZodType<SortDirection, z.ZodTypeDef, unknown> = z
        .object({
            href: z.string(),
            is_default: z.string(),
            name: z.string(),
            value: z.string(),
        })
        .transform((v) => {
            return {
                href: v.href,
                isDefault: v.is_default,
                name: v.name,
                value: v.value,
            };
        });

    export type Outbound = {
        href: string;
        is_default: string;
        name: string;
        value: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SortDirection> = z
        .object({
            href: z.string(),
            isDefault: z.string(),
            name: z.string(),
            value: z.string(),
        })
        .transform((v) => {
            return {
                href: v.href,
                is_default: v.isDefault,
                name: v.name,
                value: v.value,
            };
        });
}
