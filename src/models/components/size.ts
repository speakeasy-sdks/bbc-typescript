/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type Size = {
    units?: string | undefined;
};

/** @internal */
export namespace Size$ {
    export const inboundSchema: z.ZodType<Size, z.ZodTypeDef, unknown> = z
        .object({
            units: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.units === undefined ? null : { units: v.units }),
            };
        });

    export type Outbound = {
        units?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Size> = z
        .object({
            units: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.units === undefined ? null : { units: v.units }),
            };
        });
}
