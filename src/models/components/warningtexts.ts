/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type WarningTextsWarningTextWarningText = {
    numberText?: string | undefined;
    length?: string | undefined;
};

export type WarningTextsWarningText = {
    numberText?: string | undefined;
    length?: string | undefined;
    warningText?: Array<WarningTextsWarningTextWarningText> | undefined;
};

export type WarningTexts = {
    warningText?: Array<WarningTextsWarningText> | undefined;
};

/** @internal */
export namespace WarningTextsWarningTextWarningText$ {
    export const inboundSchema: z.ZodType<
        WarningTextsWarningTextWarningText,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            "#text": z.string().optional(),
            length: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v["#text"] === undefined ? null : { numberText: v["#text"] }),
                ...(v.length === undefined ? null : { length: v.length }),
            };
        });

    export type Outbound = {
        "#text"?: string | undefined;
        length?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        WarningTextsWarningTextWarningText
    > = z
        .object({
            numberText: z.string().optional(),
            length: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.numberText === undefined ? null : { "#text": v.numberText }),
                ...(v.length === undefined ? null : { length: v.length }),
            };
        });
}

/** @internal */
export namespace WarningTextsWarningText$ {
    export const inboundSchema: z.ZodType<WarningTextsWarningText, z.ZodTypeDef, unknown> = z
        .object({
            "#text": z.string().optional(),
            length: z.string().optional(),
            warning_text: z
                .array(z.lazy(() => WarningTextsWarningTextWarningText$.inboundSchema))
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v["#text"] === undefined ? null : { numberText: v["#text"] }),
                ...(v.length === undefined ? null : { length: v.length }),
                ...(v.warning_text === undefined ? null : { warningText: v.warning_text }),
            };
        });

    export type Outbound = {
        "#text"?: string | undefined;
        length?: string | undefined;
        warning_text?: Array<WarningTextsWarningTextWarningText$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WarningTextsWarningText> = z
        .object({
            numberText: z.string().optional(),
            length: z.string().optional(),
            warningText: z
                .array(z.lazy(() => WarningTextsWarningTextWarningText$.outboundSchema))
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.numberText === undefined ? null : { "#text": v.numberText }),
                ...(v.length === undefined ? null : { length: v.length }),
                ...(v.warningText === undefined ? null : { warning_text: v.warningText }),
            };
        });
}

/** @internal */
export namespace WarningTexts$ {
    export const inboundSchema: z.ZodType<WarningTexts, z.ZodTypeDef, unknown> = z
        .object({
            warning_text: z.array(z.lazy(() => WarningTextsWarningText$.inboundSchema)).optional(),
        })
        .transform((v) => {
            return {
                ...(v.warning_text === undefined ? null : { warningText: v.warning_text }),
            };
        });

    export type Outbound = {
        warning_text?: Array<WarningTextsWarningText$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WarningTexts> = z
        .object({
            warningText: z.array(z.lazy(() => WarningTextsWarningText$.outboundSchema)).optional(),
        })
        .transform((v) => {
            return {
                ...(v.warningText === undefined ? null : { warning_text: v.warningText }),
            };
        });
}
