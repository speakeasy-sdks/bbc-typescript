/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ForProgramme, ForProgramme$ } from "./forprogramme";
import * as z from "zod";

export type ForProgrammes = {
    forProgramme?: Array<ForProgramme> | undefined;
};

/** @internal */
export namespace ForProgrammes$ {
    export const inboundSchema: z.ZodType<ForProgrammes, z.ZodTypeDef, unknown> = z
        .object({
            for_programme: z.array(ForProgramme$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.for_programme === undefined ? null : { forProgramme: v.for_programme }),
            };
        });

    export type Outbound = {
        for_programme?: Array<ForProgramme$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ForProgrammes> = z
        .object({
            forProgramme: z.array(ForProgramme$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.forProgramme === undefined ? null : { for_programme: v.forProgramme }),
            };
        });
}
