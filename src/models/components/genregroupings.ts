/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { GenreGroup, GenreGroup$ } from "./genregroup";
import * as z from "zod";

export type GenreGroupings = {
    genreGroup?: Array<GenreGroup> | undefined;
};

/** @internal */
export namespace GenreGroupings$ {
    export const inboundSchema: z.ZodType<GenreGroupings, z.ZodTypeDef, unknown> = z
        .object({
            genre_group: z.array(GenreGroup$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.genre_group === undefined ? null : { genreGroup: v.genre_group }),
            };
        });

    export type Outbound = {
        genre_group?: Array<GenreGroup$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GenreGroupings> = z
        .object({
            genreGroup: z.array(GenreGroup$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.genreGroup === undefined ? null : { genre_group: v.genreGroup }),
            };
        });
}
