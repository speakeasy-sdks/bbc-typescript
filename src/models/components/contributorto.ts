/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type ContributorTo = {
    href: string;
    resultType: string;
};

/** @internal */
export namespace ContributorTo$ {
    export const inboundSchema: z.ZodType<ContributorTo, z.ZodTypeDef, unknown> = z
        .object({
            href: z.string(),
            result_type: z.string(),
        })
        .transform((v) => {
            return {
                href: v.href,
                resultType: v.result_type,
            };
        });

    export type Outbound = {
        href: string;
        result_type: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ContributorTo> = z
        .object({
            href: z.string(),
            resultType: z.string(),
        })
        .transform((v) => {
            return {
                href: v.href,
                result_type: v.resultType,
            };
        });
}
