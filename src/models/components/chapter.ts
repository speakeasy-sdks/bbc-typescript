/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ContributionsMixin, ContributionsMixin$ } from "./contributionsmixin";
import { Identifiers, Identifiers$ } from "./identifiers";
import { Ids, Ids$ } from "./ids";
import { ImagesMixin, ImagesMixin$ } from "./imagesmixin";
import { ItemOf, ItemOf$ } from "./itemof";
import { Offsets, Offsets$ } from "./offsets";
import { PlayEvents, PlayEvents$ } from "./playevents";
import { Synopses, Synopses$ } from "./synopses";
import * as z from "zod";

export type Chapter = {
    catalogueNumber?: string | undefined;
    contributionsMixin?: ContributionsMixin | undefined;
    duration?: number | undefined;
    identifiers?: Identifiers | undefined;
    ids?: Ids | undefined;
    imagesMixin?: ImagesMixin | undefined;
    itemOf?: ItemOf | undefined;
    musicCode?: string | undefined;
    offsets?: Offsets | undefined;
    partner: string;
    pid: string;
    playEvents?: PlayEvents | undefined;
    publisher?: string | undefined;
    recordLabel?: string | undefined;
    recordingDate?: string | undefined;
    releaseTitle?: string | undefined;
    snippetUrl?: string | undefined;
    sourceMedia?: string | undefined;
    synopses?: Synopses | undefined;
    title?: string | undefined;
    trackNumber?: string | undefined;
    trackSide?: string | undefined;
    type?: string | undefined;
    updatedTime?: Date | undefined;
};

/** @internal */
export namespace Chapter$ {
    export const inboundSchema: z.ZodType<Chapter, z.ZodTypeDef, unknown> = z
        .object({
            catalogue_number: z.string().optional(),
            contributions_mixin: ContributionsMixin$.inboundSchema.optional(),
            duration: z.number().optional(),
            identifiers: Identifiers$.inboundSchema.optional(),
            ids: Ids$.inboundSchema.optional(),
            images_mixin: ImagesMixin$.inboundSchema.optional(),
            item_of: ItemOf$.inboundSchema.optional(),
            music_code: z.string().optional(),
            offsets: Offsets$.inboundSchema.optional(),
            partner: z.string(),
            pid: z.string(),
            play_events: PlayEvents$.inboundSchema.optional(),
            publisher: z.string().optional(),
            record_label: z.string().optional(),
            recording_date: z.string().optional(),
            release_title: z.string().optional(),
            snippet_url: z.string().optional(),
            source_media: z.string().optional(),
            synopses: Synopses$.inboundSchema.optional(),
            title: z.string().optional(),
            track_number: z.string().optional(),
            track_side: z.string().optional(),
            type: z.string().optional(),
            updated_time: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.catalogue_number === undefined
                    ? null
                    : { catalogueNumber: v.catalogue_number }),
                ...(v.contributions_mixin === undefined
                    ? null
                    : { contributionsMixin: v.contributions_mixin }),
                ...(v.duration === undefined ? null : { duration: v.duration }),
                ...(v.identifiers === undefined ? null : { identifiers: v.identifiers }),
                ...(v.ids === undefined ? null : { ids: v.ids }),
                ...(v.images_mixin === undefined ? null : { imagesMixin: v.images_mixin }),
                ...(v.item_of === undefined ? null : { itemOf: v.item_of }),
                ...(v.music_code === undefined ? null : { musicCode: v.music_code }),
                ...(v.offsets === undefined ? null : { offsets: v.offsets }),
                partner: v.partner,
                pid: v.pid,
                ...(v.play_events === undefined ? null : { playEvents: v.play_events }),
                ...(v.publisher === undefined ? null : { publisher: v.publisher }),
                ...(v.record_label === undefined ? null : { recordLabel: v.record_label }),
                ...(v.recording_date === undefined ? null : { recordingDate: v.recording_date }),
                ...(v.release_title === undefined ? null : { releaseTitle: v.release_title }),
                ...(v.snippet_url === undefined ? null : { snippetUrl: v.snippet_url }),
                ...(v.source_media === undefined ? null : { sourceMedia: v.source_media }),
                ...(v.synopses === undefined ? null : { synopses: v.synopses }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.track_number === undefined ? null : { trackNumber: v.track_number }),
                ...(v.track_side === undefined ? null : { trackSide: v.track_side }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.updated_time === undefined ? null : { updatedTime: v.updated_time }),
            };
        });

    export type Outbound = {
        catalogue_number?: string | undefined;
        contributions_mixin?: ContributionsMixin$.Outbound | undefined;
        duration?: number | undefined;
        identifiers?: Identifiers$.Outbound | undefined;
        ids?: Ids$.Outbound | undefined;
        images_mixin?: ImagesMixin$.Outbound | undefined;
        item_of?: ItemOf$.Outbound | undefined;
        music_code?: string | undefined;
        offsets?: Offsets$.Outbound | undefined;
        partner: string;
        pid: string;
        play_events?: PlayEvents$.Outbound | undefined;
        publisher?: string | undefined;
        record_label?: string | undefined;
        recording_date?: string | undefined;
        release_title?: string | undefined;
        snippet_url?: string | undefined;
        source_media?: string | undefined;
        synopses?: Synopses$.Outbound | undefined;
        title?: string | undefined;
        track_number?: string | undefined;
        track_side?: string | undefined;
        type?: string | undefined;
        updated_time?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Chapter> = z
        .object({
            catalogueNumber: z.string().optional(),
            contributionsMixin: ContributionsMixin$.outboundSchema.optional(),
            duration: z.number().optional(),
            identifiers: Identifiers$.outboundSchema.optional(),
            ids: Ids$.outboundSchema.optional(),
            imagesMixin: ImagesMixin$.outboundSchema.optional(),
            itemOf: ItemOf$.outboundSchema.optional(),
            musicCode: z.string().optional(),
            offsets: Offsets$.outboundSchema.optional(),
            partner: z.string(),
            pid: z.string(),
            playEvents: PlayEvents$.outboundSchema.optional(),
            publisher: z.string().optional(),
            recordLabel: z.string().optional(),
            recordingDate: z.string().optional(),
            releaseTitle: z.string().optional(),
            snippetUrl: z.string().optional(),
            sourceMedia: z.string().optional(),
            synopses: Synopses$.outboundSchema.optional(),
            title: z.string().optional(),
            trackNumber: z.string().optional(),
            trackSide: z.string().optional(),
            type: z.string().optional(),
            updatedTime: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.catalogueNumber === undefined
                    ? null
                    : { catalogue_number: v.catalogueNumber }),
                ...(v.contributionsMixin === undefined
                    ? null
                    : { contributions_mixin: v.contributionsMixin }),
                ...(v.duration === undefined ? null : { duration: v.duration }),
                ...(v.identifiers === undefined ? null : { identifiers: v.identifiers }),
                ...(v.ids === undefined ? null : { ids: v.ids }),
                ...(v.imagesMixin === undefined ? null : { images_mixin: v.imagesMixin }),
                ...(v.itemOf === undefined ? null : { item_of: v.itemOf }),
                ...(v.musicCode === undefined ? null : { music_code: v.musicCode }),
                ...(v.offsets === undefined ? null : { offsets: v.offsets }),
                partner: v.partner,
                pid: v.pid,
                ...(v.playEvents === undefined ? null : { play_events: v.playEvents }),
                ...(v.publisher === undefined ? null : { publisher: v.publisher }),
                ...(v.recordLabel === undefined ? null : { record_label: v.recordLabel }),
                ...(v.recordingDate === undefined ? null : { recording_date: v.recordingDate }),
                ...(v.releaseTitle === undefined ? null : { release_title: v.releaseTitle }),
                ...(v.snippetUrl === undefined ? null : { snippet_url: v.snippetUrl }),
                ...(v.sourceMedia === undefined ? null : { source_media: v.sourceMedia }),
                ...(v.synopses === undefined ? null : { synopses: v.synopses }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.trackNumber === undefined ? null : { track_number: v.trackNumber }),
                ...(v.trackSide === undefined ? null : { track_side: v.trackSide }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.updatedTime === undefined ? null : { updated_time: v.updatedTime }),
            };
        });
}
