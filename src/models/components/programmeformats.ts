/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Format, Format$ } from "./format";
import * as z from "zod";

export type ProgrammeFormats = {
    format: Array<Format>;
};

/** @internal */
export namespace ProgrammeFormats$ {
    export const inboundSchema: z.ZodType<ProgrammeFormats, z.ZodTypeDef, unknown> = z
        .object({
            format: z.array(Format$.inboundSchema),
        })
        .transform((v) => {
            return {
                format: v.format,
            };
        });

    export type Outbound = {
        format: Array<Format$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ProgrammeFormats> = z
        .object({
            format: z.array(Format$.outboundSchema),
        })
        .transform((v) => {
            return {
                format: v.format,
            };
        });
}
