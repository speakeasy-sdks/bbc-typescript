/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type Next = {
    href: string;
};

/** @internal */
export namespace Next$ {
    export const inboundSchema: z.ZodType<Next, z.ZodTypeDef, unknown> = z
        .object({
            href: z.string(),
        })
        .transform((v) => {
            return {
                href: v.href,
            };
        });

    export type Outbound = {
        href: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Next> = z
        .object({
            href: z.string(),
        })
        .transform((v) => {
            return {
                href: v.href,
            };
        });
}
