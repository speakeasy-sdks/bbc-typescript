/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type MasterBrandLinkMasterBrandMasterBrand = {
    href: string;
    mid: string;
    resultType: string;
};

export type MasterBrandLinkMasterBrand = {
    href: string;
    masterBrand: MasterBrandLinkMasterBrandMasterBrand;
    mid: string;
    resultType: string;
};

export type MasterBrandLink = {
    masterBrand: MasterBrandLinkMasterBrand;
};

/** @internal */
export namespace MasterBrandLinkMasterBrandMasterBrand$ {
    export const inboundSchema: z.ZodType<
        MasterBrandLinkMasterBrandMasterBrand,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            href: z.string(),
            mid: z.string(),
            result_type: z.string(),
        })
        .transform((v) => {
            return {
                href: v.href,
                mid: v.mid,
                resultType: v.result_type,
            };
        });

    export type Outbound = {
        href: string;
        mid: string;
        result_type: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        MasterBrandLinkMasterBrandMasterBrand
    > = z
        .object({
            href: z.string(),
            mid: z.string(),
            resultType: z.string(),
        })
        .transform((v) => {
            return {
                href: v.href,
                mid: v.mid,
                result_type: v.resultType,
            };
        });
}

/** @internal */
export namespace MasterBrandLinkMasterBrand$ {
    export const inboundSchema: z.ZodType<MasterBrandLinkMasterBrand, z.ZodTypeDef, unknown> = z
        .object({
            href: z.string(),
            master_brand: z.lazy(() => MasterBrandLinkMasterBrandMasterBrand$.inboundSchema),
            mid: z.string(),
            result_type: z.string(),
        })
        .transform((v) => {
            return {
                href: v.href,
                masterBrand: v.master_brand,
                mid: v.mid,
                resultType: v.result_type,
            };
        });

    export type Outbound = {
        href: string;
        master_brand: MasterBrandLinkMasterBrandMasterBrand$.Outbound;
        mid: string;
        result_type: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MasterBrandLinkMasterBrand> = z
        .object({
            href: z.string(),
            masterBrand: z.lazy(() => MasterBrandLinkMasterBrandMasterBrand$.outboundSchema),
            mid: z.string(),
            resultType: z.string(),
        })
        .transform((v) => {
            return {
                href: v.href,
                master_brand: v.masterBrand,
                mid: v.mid,
                result_type: v.resultType,
            };
        });
}

/** @internal */
export namespace MasterBrandLink$ {
    export const inboundSchema: z.ZodType<MasterBrandLink, z.ZodTypeDef, unknown> = z
        .object({
            master_brand: z.lazy(() => MasterBrandLinkMasterBrand$.inboundSchema),
        })
        .transform((v) => {
            return {
                masterBrand: v.master_brand,
            };
        });

    export type Outbound = {
        master_brand: MasterBrandLinkMasterBrand$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MasterBrandLink> = z
        .object({
            masterBrand: z.lazy(() => MasterBrandLinkMasterBrand$.outboundSchema),
        })
        .transform((v) => {
            return {
                master_brand: v.masterBrand,
            };
        });
}
