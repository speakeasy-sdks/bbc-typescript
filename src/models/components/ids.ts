/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Id, Id$ } from "./id";
import * as z from "zod";

export type Ids = {
    id: Array<Id>;
};

/** @internal */
export namespace Ids$ {
    export const inboundSchema: z.ZodType<Ids, z.ZodTypeDef, unknown> = z
        .object({
            id: z.array(Id$.inboundSchema),
        })
        .transform((v) => {
            return {
                id: v.id,
            };
        });

    export type Outbound = {
        id: Array<Id$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Ids> = z
        .object({
            id: z.array(Id$.outboundSchema),
        })
        .transform((v) => {
            return {
                id: v.id,
            };
        });
}
