/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type PlayedInLinksPlayedIn = {
    href?: string | undefined;
    resultType?: string | undefined;
};

export type PlayedIn = {
    href?: string | undefined;
    playedIn?: PlayedInLinksPlayedIn | undefined;
    resultType?: string | undefined;
};

export type PlayedInLinks = {
    playedIn?: PlayedIn | undefined;
};

/** @internal */
export namespace PlayedInLinksPlayedIn$ {
    export const inboundSchema: z.ZodType<PlayedInLinksPlayedIn, z.ZodTypeDef, unknown> = z
        .object({
            href: z.string().optional(),
            result_type: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.href === undefined ? null : { href: v.href }),
                ...(v.result_type === undefined ? null : { resultType: v.result_type }),
            };
        });

    export type Outbound = {
        href?: string | undefined;
        result_type?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PlayedInLinksPlayedIn> = z
        .object({
            href: z.string().optional(),
            resultType: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.href === undefined ? null : { href: v.href }),
                ...(v.resultType === undefined ? null : { result_type: v.resultType }),
            };
        });
}

/** @internal */
export namespace PlayedIn$ {
    export const inboundSchema: z.ZodType<PlayedIn, z.ZodTypeDef, unknown> = z
        .object({
            href: z.string().optional(),
            played_in: z.lazy(() => PlayedInLinksPlayedIn$.inboundSchema).optional(),
            result_type: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.href === undefined ? null : { href: v.href }),
                ...(v.played_in === undefined ? null : { playedIn: v.played_in }),
                ...(v.result_type === undefined ? null : { resultType: v.result_type }),
            };
        });

    export type Outbound = {
        href?: string | undefined;
        played_in?: PlayedInLinksPlayedIn$.Outbound | undefined;
        result_type?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PlayedIn> = z
        .object({
            href: z.string().optional(),
            playedIn: z.lazy(() => PlayedInLinksPlayedIn$.outboundSchema).optional(),
            resultType: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.href === undefined ? null : { href: v.href }),
                ...(v.playedIn === undefined ? null : { played_in: v.playedIn }),
                ...(v.resultType === undefined ? null : { result_type: v.resultType }),
            };
        });
}

/** @internal */
export namespace PlayedInLinks$ {
    export const inboundSchema: z.ZodType<PlayedInLinks, z.ZodTypeDef, unknown> = z
        .object({
            played_in: z.lazy(() => PlayedIn$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.played_in === undefined ? null : { playedIn: v.played_in }),
            };
        });

    export type Outbound = {
        played_in?: PlayedIn$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PlayedInLinks> = z
        .object({
            playedIn: z.lazy(() => PlayedIn$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.playedIn === undefined ? null : { played_in: v.playedIn }),
            };
        });
}
