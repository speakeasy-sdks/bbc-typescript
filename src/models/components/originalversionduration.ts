/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type OriginalVersionDurationVersion = {
    duration?: string | undefined;
    href: string;
    pid: string;
};

export type Version = {
    duration?: string | undefined;
    href: string;
    pid: string;
    version?: OriginalVersionDurationVersion | undefined;
};

export type OriginalVersionDuration = {
    version?: Version | undefined;
};

/** @internal */
export namespace OriginalVersionDurationVersion$ {
    export const inboundSchema: z.ZodType<OriginalVersionDurationVersion, z.ZodTypeDef, unknown> = z
        .object({
            duration: z.string().optional(),
            href: z.string(),
            pid: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.duration === undefined ? null : { duration: v.duration }),
                href: v.href,
                pid: v.pid,
            };
        });

    export type Outbound = {
        duration?: string | undefined;
        href: string;
        pid: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, OriginalVersionDurationVersion> =
        z
            .object({
                duration: z.string().optional(),
                href: z.string(),
                pid: z.string(),
            })
            .transform((v) => {
                return {
                    ...(v.duration === undefined ? null : { duration: v.duration }),
                    href: v.href,
                    pid: v.pid,
                };
            });
}

/** @internal */
export namespace Version$ {
    export const inboundSchema: z.ZodType<Version, z.ZodTypeDef, unknown> = z
        .object({
            duration: z.string().optional(),
            href: z.string(),
            pid: z.string(),
            version: z.lazy(() => OriginalVersionDurationVersion$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.duration === undefined ? null : { duration: v.duration }),
                href: v.href,
                pid: v.pid,
                ...(v.version === undefined ? null : { version: v.version }),
            };
        });

    export type Outbound = {
        duration?: string | undefined;
        href: string;
        pid: string;
        version?: OriginalVersionDurationVersion$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Version> = z
        .object({
            duration: z.string().optional(),
            href: z.string(),
            pid: z.string(),
            version: z.lazy(() => OriginalVersionDurationVersion$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.duration === undefined ? null : { duration: v.duration }),
                href: v.href,
                pid: v.pid,
                ...(v.version === undefined ? null : { version: v.version }),
            };
        });
}

/** @internal */
export namespace OriginalVersionDuration$ {
    export const inboundSchema: z.ZodType<OriginalVersionDuration, z.ZodTypeDef, unknown> = z
        .object({
            version: z.lazy(() => Version$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.version === undefined ? null : { version: v.version }),
            };
        });

    export type Outbound = {
        version?: Version$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, OriginalVersionDuration> = z
        .object({
            version: z.lazy(() => Version$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.version === undefined ? null : { version: v.version }),
            };
        });
}
