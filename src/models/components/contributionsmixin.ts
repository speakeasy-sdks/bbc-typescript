/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    ContributionsMixinContribution,
    ContributionsMixinContribution$,
} from "./contributionsmixincontribution";
import * as z from "zod";

export type ContributionsMixinContributions = {
    contributionsMixinContribution?: Array<ContributionsMixinContribution> | undefined;
    href?: string | undefined;
};

export type Contributions = {
    contributions: ContributionsMixinContributions;
    contributionsMixinContribution?: Array<ContributionsMixinContribution> | undefined;
    href?: string | undefined;
};

export type ContributionsMixin = {
    contributions: Contributions;
};

/** @internal */
export namespace ContributionsMixinContributions$ {
    export const inboundSchema: z.ZodType<ContributionsMixinContributions, z.ZodTypeDef, unknown> =
        z
            .object({
                contributions_mixin_contribution: z
                    .array(ContributionsMixinContribution$.inboundSchema)
                    .optional(),
                href: z.string().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.contributions_mixin_contribution === undefined
                        ? null
                        : { contributionsMixinContribution: v.contributions_mixin_contribution }),
                    ...(v.href === undefined ? null : { href: v.href }),
                };
            });

    export type Outbound = {
        contributions_mixin_contribution?:
            | Array<ContributionsMixinContribution$.Outbound>
            | undefined;
        href?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ContributionsMixinContributions
    > = z
        .object({
            contributionsMixinContribution: z
                .array(ContributionsMixinContribution$.outboundSchema)
                .optional(),
            href: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.contributionsMixinContribution === undefined
                    ? null
                    : { contributions_mixin_contribution: v.contributionsMixinContribution }),
                ...(v.href === undefined ? null : { href: v.href }),
            };
        });
}

/** @internal */
export namespace Contributions$ {
    export const inboundSchema: z.ZodType<Contributions, z.ZodTypeDef, unknown> = z
        .object({
            contributions: z.lazy(() => ContributionsMixinContributions$.inboundSchema),
            contributions_mixin_contribution: z
                .array(ContributionsMixinContribution$.inboundSchema)
                .optional(),
            href: z.string().optional(),
        })
        .transform((v) => {
            return {
                contributions: v.contributions,
                ...(v.contributions_mixin_contribution === undefined
                    ? null
                    : { contributionsMixinContribution: v.contributions_mixin_contribution }),
                ...(v.href === undefined ? null : { href: v.href }),
            };
        });

    export type Outbound = {
        contributions: ContributionsMixinContributions$.Outbound;
        contributions_mixin_contribution?:
            | Array<ContributionsMixinContribution$.Outbound>
            | undefined;
        href?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Contributions> = z
        .object({
            contributions: z.lazy(() => ContributionsMixinContributions$.outboundSchema),
            contributionsMixinContribution: z
                .array(ContributionsMixinContribution$.outboundSchema)
                .optional(),
            href: z.string().optional(),
        })
        .transform((v) => {
            return {
                contributions: v.contributions,
                ...(v.contributionsMixinContribution === undefined
                    ? null
                    : { contributions_mixin_contribution: v.contributionsMixinContribution }),
                ...(v.href === undefined ? null : { href: v.href }),
            };
        });
}

/** @internal */
export namespace ContributionsMixin$ {
    export const inboundSchema: z.ZodType<ContributionsMixin, z.ZodTypeDef, unknown> = z
        .object({
            contributions: z.lazy(() => Contributions$.inboundSchema),
        })
        .transform((v) => {
            return {
                contributions: v.contributions,
            };
        });

    export type Outbound = {
        contributions: Contributions$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ContributionsMixin> = z
        .object({
            contributions: z.lazy(() => Contributions$.outboundSchema),
        })
        .transform((v) => {
            return {
                contributions: v.contributions,
            };
        });
}
